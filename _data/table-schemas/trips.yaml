title: Trips
description: >
  Lists all surveys (identified by a unique `tripkey`) and includes relevant 
  survey-specific parameters. Each record represents a single survey. If you 
  have multiple observers producing independent data streams, use a separate 
  `tripkey` for each of them (hence for the classical plane survey setup with 2 
  observers on each side of plane independently recording their observations, 
  there should be 2 unique `tripkey`s).
fields:
  - name: tripkey
    description: >
      Unique identifier for each trip record. Recommended practice is to use a 
      persistent identifier (i.e. one that does not change through time).
    type: string
    format: default
    constraints:
      required: true
      unique: true

  - name: data_provider
    description: > # TODO: add lookup table?
      Origin of data (e.g. data owner or supplier) – see lookup table.
    type: integer
    format: default
    constraints:
      required: true

  - name: public_data
    description: >
      `TRUE` if data for this trip can be made publicly accessible under the 
      conditions of the ICES data policy, `FALSE` if data should remain private.
    type: boolean
    format: default
    constrains:
      required: true

  - name: date
    description: >
      Date in the format `yyyy-mm-dd`.
    type: date
    format: default # YYYY-MM-DD
    constraints:
      required: true

  - name: platform_type
    description: |
      The platform used for carrying out observations:
      - 1 Ship
      - 2 Helicopter
      - 3 Aeroplane
      - 4 Aeroplane (digital survey)
    type: integer
    format: default
    constraints:
      required: true
      enum:
        - 1
        - 2
        - 3
        - 4

  - name: platform_code
    description: >
      Code for the ship name or the call sign (unique identifier of the 
      aircraft) – see lookup table.
    type: string
    format: default
    constraints:
      required: false

  - name: flying_height
    description: >
      The flying height of the aeroplane or helicopter (m).
    type: integer
    format: default
    constraints:
      required: false

  - name: transect_width
    description: >
      The width of the survey transect (m).
    type: integer
    format: default
    constraints:
      required: true
 
  - name: campaign_key
    description: >
      Aggregates parts of a campaign, i.e. different sides of the platform or 
      counts in different parts of a study area covered on different days or by 
      different platforms. The `campaign_key` should equal the `tripkey` of the 
      1st entry of the particular campaign.
    type: string
    format: default
    constraints:
      required: false

  - name: route
    description: > # TODO: indicate < 50 bytes?
      Short description of the area covered or route followed.
    type: string
    format: default
    constraints:
      required: false

  - name: count_method
    description: | # TODO: add comment?
      The type of observation method being applied:
      - 1 Full ship-based transect method with snapshot for flying birds
      - 2 Full ship-based transect method, no snapshot for flying birds
      - 3 All observations, but no transect operated
      - 4 Presence/absence data
      - 5 Full ship-based transect method with snapshot for flying birds, but no scan data for outside the transect
      - 6 Ship-based strip transect, no snapshot, no distance estimation
      - 7 Ship-based strip transect, with snapshot, no distance estimation
      - 8 Visual aerial survey line transect method with distance sampling
      - 9 Visual aerial survey strip transect, no distance estimation
      - 10 Visual aerial survey total counts
      - 11 Digital aerial – video
      - 12 Digital aerial – stills
      - 13 Only cetaceans and rare birds
    type: integer
    format: default
    constraints:
      required: true
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13

  - name: species_counted
    description: |
      The species (groups) which were being counted:
      - 1 All species recorded (standard)
      - 2 All species except Larus gulls
      - 3 All species except fulmars
      - 4 All species except Larus gulls, fulmars and kittiwakes
      - 5 Auks only
      - 6 Auks and seaduck only
      - 7 All species except eiders and gulls
      - 8 All species except gannets
      - 9 Auks and unusual seabirds only
      - 10 All species except auks and divers
      - 11 All species except small gulls (Little, Black-headed & Common Gull/Black-legged Kittiwake)
      - 12 All species except Lesser Black-backed Gulls
      - 13 All species except seaduck and divers
      - 14 All species except gannets, fulmars and kittiwakes
      - 15 All species except fulmars and gannets
      - 16 Cetaceans only
      - 17 Auks, divers, grebes and seaduck only
      - 99 Other
    type: integer
    format: default
    constraints:
      required: true
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 99

  - name: distance_bins
    description: >
      List of the distance bin boundaries applied during counting, as input for 
      distance analysis, according to the following format: `x|x|...|x`. For 
      ship-based surveys applying the standard 300 m wide transect this would 
      be: `0|50|100|200|300`.
    type: string
    format: default
    constraints:
      required: false
      pattern: '(\d+\|)+\d+'

  - name: use_of_binoculars
    description: |
      The extent to which binoculars were used to detect birds/cetaceans:
      - 1 No binoculars used for detection of birds/cetaceans
      - 2 Binoculars used for detection of birds/cetaceans far ahead of the ship (e.g. for seaduck and diver surveys)
      - 3 Binoculars used extensively for scanning ahead and to the side, naked eye used for close observations (e.g. for cetacean surveys)
    type: integer
    format: default
    constraints:
      required: false
      enum:
        - 1
        - 2
        - 3

  - name: behaviour_recording
    description: |
      Indicates if and how behaviour has been recorded:
      - 0 Behaviour not recorded
      - 1 Typical detailed ship-based behaviour recording (see behaviour lookup table)
      - 2 Typical aeroplane-based activity recording (see activity activity lookup table)
      - 3 Other (only selected types of behaviour recorded, include more details in notes column)
    type: integer
    format: default
    constraints:
      required: false
      enum:
        - 0
        - 1
        - 2
        - 3

  - name: base_side
    description: |
      Side of platform used for counting (ship) or seat of the observer (aeroplane):
      - 1 Aerial survey: right front
      - 2 Aerial survey: left back
      - 3 Aerial survey: right back
      - 4 Aerial survey: left front
      - 5 Ship-based survey: port side
      - 6 Ship-based survey: starboard side
      - 9 Observers both left and right producing one collective data stream
    type: integer
    format: default
    constraints:
      required: false
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 9

  - name: direction_of_travel_type
    description: |
      The way how direction of ships and birds is recorded:
      - U Unknown
      - A Absolute
      - R Relative (to direction of platform)
      - Z Number
      - P Arrow
      - K Not recorded
    type: string
    format: default
    constraints:
      required: false
      enum:
        - U
        - A
        - R
        - Z
        - P
        - K

  - name: observer_role
    description: |
      Indicates the role of the observer. Important for surveys using the 
      double observer platform. Default is `1` (Primary).
      - 1 Primary (the only observer(s) on the platform or if double observer approach used, the observer who’s recordings should be used in data analyses where only a single data stream can be included)
      - 2 Secondary (the additional observer(s) to the primary observer in the double observer platform)
      - 3 Tertiary (the additional observer(s) to the primary and secondary observers in the triple observer platform)
    type: integer
    format: default
    constraints:
      required: false
      enum:
        - 1
        - 2
        - 3

  - name: number_of_observers
    description: >
      Number of observers producing the data stream of this specific `tripkey`. 
      The number of observers does not include observers that record 
      independent observations (thus producing different data streams that are 
      included in the database under different `tripkey`s).
    type: integer
    format: default
    constraints:
      required: false

  - name: observer1
    description: >
      Code for the observer name – see lookup table. Report only the observers 
      assisting the `observer1` in the fields `observer2` and `observer3`. Do 
      not report the other observers producing their own data streams.
    type: integer
    format: default
    constraints:
      required: false

  - name: observer2
    description: >
      Code for the observer name – see lookup table. Report only the observers 
      assisting the `observer1` in the fields `observer2` and `observer3`. Do 
      not report the other observers producing their own data streams.
    type: integer
    format: default
    constraints:
      required: false

  - name: observer3
    description: >
      Code for the observer name – see lookup table. Report only the observers 
      assisting the `observer1` in the fields `observer2` and `observer3`. Do 
      not report the other observers producing their own data streams.
    type: integer
    format: default
    constraints:
      required: false

  - name: notes
    description: >
      Additional details related to the survey.
    type: string
    format: default
    constraints:
      required: false

missingValues:
  - ''
  - NA
primaryKey: tripkey

